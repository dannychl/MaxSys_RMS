
@{
    ViewBag.Title = "Index";
}

<script src="~/Scripts/Chart.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Content/boostrap.min.css" rel="stylesheet"></script>


<style>
    #chart_container{
        width:400px;
        height:400px;
        border: 1px solid #ddd;
        padding: 1px;
        border-radius: 4px;
    }
</style>

<table style="border:hidden; width:100%">
    <td style="border:hidden">
        <h2 style="font-family:Verdana; font-weight:bold">Dashboard</h2>        
        <hr />
    </td>
</table>

<table style="border:hidden; width:100%">

    <td>
        <div id="chart_container">
            <canvas id="bar_chart"></canvas>
        </div>
    </td>
    <td>
        <div id="chart_container">
            <canvas id="pie_chart"></canvas>
        </div>
    </td>
</table>

@*<div id="chart_container">
    <canvas id="bar_chart"></canvas>
</div>

<div id="chart_container">
    <canvas id="pie_chart"></canvas>
</div>*@

<script>

    var testCountArr = @Html.Raw(Json.Encode(ViewBag.TestCount));
    var notInterviewCountArr = @Html.Raw(Json.Encode(ViewBag.NotInterviewCount));
    var position = @Html.Raw(Json.Encode(ViewBag.Position));
    var interviewStatus = @Html.Raw(Json.Encode(ViewBag.InterviewStatus));
    var interviewStatusCount = @Html.Raw(Json.Encode(ViewBag.InterviewStatusCount));

    var ctx = $("#bar_chart");
    var barChart = new Chart(ctx, {

        type: 'bar',
        data: {
            labels: position,
            @*labels: ["Human Resource Manager", "Python Developer", "General Manager"],*@
            datasets: [{
                label: "Candidates (Haven't Test)",
                data: testCountArr,
                backgroundColor: "rgba(54, 162, 235, 1)",
                borderColor: "rgb(54, 162, 235)",
                borderWidth: 2,
                barThickness: 35,   
            },
             {
                label: "Candidates (Haven't Interview)",
                data: notInterviewCountArr,
                backgroundColor: "rgba(255, 99, 132, 1)",
                borderColor: "rgb(255, 99, 132)",
                borderWidth: 1,
                 barThickness: 35,

            }]
        },

        options: {
            maintainAspectRatio: false,
            title: { display: true, text: 'All Candidates (Not Tested & Not Interviewed)'},
            scales: {
                responsive: true,
                xAxes: [{ ticks: { beginAtZero: true }, gridLines: { display: false }}],
                yAxes: [{
                    ticks: {
                        beginAtZero: true,
                        responsive: true,
                        mainAspectRatio: false,
                        callback: (v) => !!~[0, 1, 2, 3, 4,5,6,7,8,9,10].indexOf(v) ? v : '',
                        min: 0,
                        max: 10,
                        step: 1,
                    }
                }]},
        },
    });

    var ctx = $("#pie_chart");
    var barChart = new Chart(ctx, {

        type: 'pie',
        data: {
            labels: interviewStatus,
            datasets: [{
                label: "Interviewee Status",
                data: interviewStatusCount,
                backgroundColor: ["rgba(54, 162, 235, 1)", "rgba(255, 99, 132, 1)", "rgba(255, 159, 64, 1)", "rgba(255, 205, 86, 1)", "rgba(75, 192, 192, 1)", "rgba(153, 102, 255, 1)", "rgba(201, 203, 207, 1)"],
                borderColor: ["rgb(54, 162, 235)", "rgb(255, 99, 132)", "rgb(255, 159, 64)", "rgb(255, 205, 86)", "rgb(75, 192, 192)", "rgb(153, 102, 255)", "rgb(201, 203, 207)"],
                borderWidth: 2,
                barThickness: 35,
            }]
        },

    options: {
        maintainAspectRatio: false,
            title: { display: true, text: 'All Interviewee Status' },
        scales: {
            responsive: true,
            xAxes: [{ ticks: { beginAtZero: true }, gridLines: { display: false }, display: false }],
                    yAxes: [{
                        ticks: {
                            beginAtZero: true,
                            responsive: true,
                            mainAspectRatio: false,
                            callback: (v) => !!~[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10].indexOf(v) ? v : '',
                            min: 0,
                            max: 10,
                            step: 1,
                        }
                    }]
        },
    },
    });
</script>

